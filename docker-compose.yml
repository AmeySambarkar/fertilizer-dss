version: '3.8'
services:
  web: { build: ., container_name: dss_web_app, ports: ["8000:8000"], depends_on: [redis, db], volumes: [.:/app], command: uvicorn backend_app:app --host 0.0.0.0 --port 8000 --reload, environment: ['POSTGRES_USER=', 'POSTGRES_PASSWORD=', 'POSTGRES_DB=', 'POSTGRES_HOST=db', 'POSTGRES_PORT=5432', 'CROP_PRICE_PER_KG_INR=', 'COST_PER_KG_N_INR=', 'COST_PER_KG_P_INR=', 'COST_PER_KG_K_INR='] }
  worker: { build: ., container_name: dss_worker, command: celery -A tasks.celery_app worker --loglevel=info, volumes: [.:/app], depends_on: [redis, db], environment: ['POSTGRES_USER=', 'POSTGRES_PASSWORD=', 'POSTGRES_DB=', 'POSTGRES_HOST=db', 'POSTGRES_PORT=5432', 'CROP_PRICE_PER_KG_INR=', 'COST_PER_KG_N_INR=', 'COST_PER_KG_P_INR=', 'COST_PER_KG_K_INR='] }
  redis: { image: "redis:alpine", container_name: dss_redis, ports: ["6379:6379"] }
  db: { image: postgis/postgis:13-3.1, container_name: dss_db, environment: {POSTGRES_USER: '', POSTGRES_PASSWORD: '', POSTGRES_DB: ''}, volumes: ['postgres_data:/var/lib/postgresql/data', './schema.sql:/docker-entrypoint-initdb.d/init.sql'], ports: [":5432"] }
volumes: { .: {}, postgres_data: {} }
